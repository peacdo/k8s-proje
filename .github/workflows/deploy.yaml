name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Check Docker and kubectl
      run: |
        docker --version
        kubectl version --client
    
    - name: Setup kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
    
    - name: Deploy Registry
      run: |
        kubectl apply -f k8s/registry.yaml
        kubectl wait --for=condition=ready pod -l app=registry --timeout=300s
        # Wait for service to get nodePort
        sleep 10
    
    - name: Configure Docker
      run: |
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        echo "{\"insecure-registries\":[\"${NODE_IP}:32000\"]}" | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker
        # Wait for Docker to restart
        sleep 5
    
    - name: Build Frontend
      run: |
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        cd frontend
        docker build -t ${NODE_IP}:32000/frontend:latest .
        docker push ${NODE_IP}:32000/frontend:latest
    
    - name: Build Backend
      run: |
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        cd backend
        docker build -t ${NODE_IP}:32000/backend:latest .
        docker push ${NODE_IP}:32000/backend:latest
    
    - name: Create Database Secret
      run: |
        kubectl delete secret db-credentials --ignore-not-found
        kubectl create secret generic db-credentials --from-literal=password=${{ secrets.DB_PASSWORD }}
    
    - name: Update Kubernetes Manifests
      run: |
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        sed -i "s|localhost:5000|${NODE_IP}:32000|g" k8s/frontend.yaml
        sed -i "s|localhost:5000|${NODE_IP}:32000|g" k8s/backend.yaml
    
    - name: Deploy to Kubernetes
      if: github.ref == 'refs/heads/main'
      run: |
        kubectl apply -f k8s/database.yaml
        kubectl wait --for=condition=ready pod -l app=postgres --timeout=300s
        echo "Database pod is ready"
        
        kubectl apply -f k8s/backend.yaml
        echo "Waiting for backend pod..."
        sleep 10
        kubectl get pods -l app=backend -o wide
        kubectl describe pod -l app=backend
        kubectl logs -l app=backend
        kubectl wait --for=condition=ready pod -l app=backend --timeout=300s
        
        kubectl apply -f k8s/frontend.yaml
        kubectl wait --for=condition=ready pod -l app=frontend --timeout=300s
    
    - name: Verify Deployment
      if: github.ref == 'refs/heads/main'
      run: |
        kubectl get pods
        kubectl get services 